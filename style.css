*{
  margin: 0;
  padding: 0;
}
body{
  background-color: black;
  font-family: sans-serif;
  color: white;
}
a{
  color: white;
}
a:hover{
  color: brown;
}
header{
  align-items: center;
  height: 120px;
  justify-content: space-between;
}
.option{
  margin: 0 25px 0 25px;
}
.d-flex-c{
  display: flex;
  flex-direction: column;
}
.d-flex-r{
  display: flex;
  flex-direction: row;
}
#m-container{
  max-width: 1480px;
  width: 80%;
  margin: 0 auto;
}
.container{
  border-radius: 10px;
  padding: 20px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 16px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  border: 1px solid rgba(255, 255, 255, 0.3);
}
.container2{
  border-radius: 10px;
  margin:15px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 16px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  padding: 20px;
}
#col-l{
  width: 60%;
}
@keyframes body {
  to {
    background-color: rgb(19, 48, 97);
  }
}

.cube {
  height: 3px;
  width: 0%;
  background-color: #fff;
  position: fixed;
  top: 100px;
  left: 200px;
  animation: progress 1s linear;
}
@keyframes progress {
  to {
    background-color: rgb(20, 255, 226);
    width: 100%;
  }
}

.cube-wrap {
  --size: 5vmin;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  perspective: 100vmin;
}
.cube {
  transform-style: preserve-3d;
  transform: rotateX(0deg) rotateZ(45deg) rotateY(-45deg);
  animation: cube 1s linear;
}
@keyframes cube {
  to {
    transform: rotateX(360deg) rotateZ(45deg) rotateY(-45deg);
  }
}

.side {
  position: absolute;
  width: var(--size);
  height: var(--size);
  background-color: #eee;
  backface-visibility: visible;
  top: calc(var(--size) * -.5);
  left: calc(var(--size) * -.5);
}
.top {
  background-color: #fff;
  transform: rotateX(90deg) translateZ(calc(var(--size) * .5));
}
.bottom {
  background-color: #999;
  transform: rotateX(90deg) translateZ(calc(var(--size) * -.5));
}
.left {
  background-color: #ccc;
  transform: rotateY(90deg) translateZ(calc(var(--size) * .5));
}
.right {
  background-color: #ddd;
  transform: rotateY(90deg) translateZ(calc(var(--size) * -.5));
}
.front {
  background-color: #aaa;
  transform: translateZ(calc(var(--size) * .5));
}
.back {
  background-color: #bbb;
  transform: translateZ(calc(var(--size) * -.5));
}

:root * {
  /* Pause the animation */
  animation-play-state: paused;
  /* Bind the animation to scroll */
  animation-delay: calc(var(--scroll) * -1s);
  /* These last 2 properites clean up overshoot weirdness */
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
#user{
  
  justify-content: space-around;
}
#pic{
  border-radius: 200px;
  width: 100px;
}
h2{
  color: brown;
}
li{
  margin-top: 10px;
}
footer{
  display: flex;
  background: rgba(255, 255, 255, 0.2);
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  position:fixed;
  bottom: 0;
  align-items: center;
  width: 100%;
  height: 80px;
}
#footer-container{
  margin: 0 auto;
  max-width: 1480px;
  justify-content: space-between;
}